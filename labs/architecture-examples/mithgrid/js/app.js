// Generated by CoffeeScript 1.4.0
var app,
  __slice = [].slice;

MITHgrid.Application.namespace("todomvc", function(exp) {
  return exp.initInstance = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return (_ref = MITHgrid.Application).initInstance.apply(_ref, ["MITHgrid.Application.todomvc"].concat(__slice.call(args), [function(that, container) {
      return that.ready(function() {
        var List, click, dataStore, enter, item;
        window["test"] = that;
        dataStore = that.dataStore.todolist;
        List = MITHgrid.Presentation.List.initInstance('#todo-list', {
          dataView: that.dataView.todolistData,
          getState: that.getState
        });
        item = [
          {
            id: 1,
            text: "Get Milk!",
            type: "active"
          }, {
            id: 2,
            text: "Book an appointment with doctor.",
            type: "active"
          }
        ];
        dataStore.loadItems(item);
        exp = dataStore.prepare([".type"]);
        click = MITHgrid.Click.initInstance({
          selectors: {
            "clicker": ""
          }
        });
        enter = MITHgrid.Enter.initInstance({});
        click.bind("#filters").events.onClick.addListener(function(e) {
          switch (e.target.text) {
            case "Active":
              that.setState("active");
              return List.selfRender();
            case "All":
              that.setState("all");
              return List.selfRender();
            case "Completed":
              that.setState("completed");
              return List.selfRender();
          }
        });
        click.bind("#clear-completed").events.onClick.addListener(function(e) {
          var id, _i, _len, _ref, _results;
          _ref = dataStore.items();
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            id = _ref[_i];
            if (exp.evaluate(id)[0] === "completed") {
              _results.push(dataStore.removeItems(id));
            } else {
              _results.push(void 0);
            }
          }
          return _results;
        });
        enter.bind("#new-todo").events.onEnter.addListener(function(e) {
          var ids, ref;
          if ((ref = e.target.value) != null) {
            if (ref.trim() === "") {
              return false;
            }
            ids = dataStore.items();
            item = {
              id: parseInt(ids[ids.length - 1]) + 1,
              type: "active",
              text: ref
            };
            dataStore.loadItems([item]);
            return e.target.value = "";
          }
        });
        dataStore.events.onModelChange.addListener(function() {
          var active, completed, id, _i, _len, _ref;
          console.log("something changed");
          active = 0;
          completed = 0;
          _ref = dataStore.items();
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            id = _ref[_i];
            if (exp.evaluate(id)[0] === "active") {
              active += 1;
            } else {
              completed += 1;
            }
          }
          that.setActive(active);
          return that.setCompleted(completed);
        });
        that.events.onActiveChange.addListener(function() {
          return $("#todo-count").html("<strong>" + that.getActive() + "</strong> item left");
        });
        return that.events.onCompletedChange.addListener(function() {
          if (that.getCompleted() === 0) {
            return $("#clear-completed").html("");
          } else {
            return $("#clear-completed").html("Clear completed (" + that.getCompleted() + ")");
          }
        });
      });
    }]));
  };
});

MITHgrid.defaults("MITHgrid.Application.todomvc", {
  variables: {
    Active: {
      "default": 2,
      is: "rw"
    },
    Completed: {
      "default": 0,
      is: "rw"
    },
    State: {
      "default": "all",
      is: "rw"
    }
  },
  dataStores: {
    todolist: {
      types: {
        todo: {}
      },
      properties: {
        "text": {
          valueType: "text"
        }
      }
    }
  },
  dataViews: {
    todolistData: {
      dataStore: "todolist",
      type: ["completed", "active"]
    }
  }
});

MITHgrid.defaults("MITHgrid.Click", {
  selectors: {
    "clicker": ".clicker"
  },
  bind: {
    events: {
      onClick: null
    }
  }
});

MITHgrid.defaults("MITHgrid.DblClick", {
  bind: {
    events: {
      on: null
    }
  }
});

MITHgrid.defaults("MITHgrid.Enter", {
  bind: {
    events: {
      onEnter: null
    }
  }
});

app = MITHgrid.Application.todomvc.initInstance("todomvc", {});

app.run();
